const questionData = [
  {
    questionNumber: 1,
    category: "test",
    question: "What's the worst part about coding interviews?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Algos",
    answerTwo: "Getting the interview in the first place",
    answerThree: "Networking",
    answerFour: "Making it to the final round and they change the offer",
    answerFive: "What's a coding interview?",
    timesCorrect: 4,
    timesIncorrect: 2,
  },
  // Question 2
  {
    questionNumber: 2,
    category: "JavaScript Basics",
    question: "What is JavaScript?",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "A scripting language used to make the website interactive",
    answerTwo: "An assembly language used to make the website interactive",
    answerThree: "A compiled language used to make the website interactive",
    answerFour: "None of the above",
    timesCorrect: 4,
    timesIncorrect: 2,
  },

  // Question 3
  {
    questionNumber: 3,
    category: "JavaScript Basics",
    question: "Which of the following is correct about JavaScript?",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "It's an object-based language",
    answerTwo: "It's an assembly-language",
    answerThree: "It's an object-oriented language",
    answerFour: "It's a high-level language",
    answerFive: "None of the above",
    timesCorrect: 4,
    timesIncorrect: 2,
  },

  // Question 4
  {
    questionNumber: 4,
    category: "JavaScript Basics",
    question: "Among the given statements, which statement defines closures in JavaScript?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne:
      "JavaScript is a function that is enclosed with references to its inner function scope",
    answerTwo:
      "JavaScript is a function that is enclosed with references to its lexical environment",
    answerThree:
      "JavaScript is a function that is enclosed with the object to its inner function scope",
    answerFour: "None of the above",
    timesCorrect: 4,
    timesIncorrect: 2,
  },

  // Question 5
  {
    questionNumber: 5,
    category: "JavaScript Basics",
    question: "Arrays in JavaScript are defined by which of the following statements?",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "It is an ordered list of values",
    answerTwo: "It is an ordered list of objects",
    answerThree: "It is an ordered list of strings",
    answerFour: "It is an ordered list of functions",
    answerFive: "None of the above",
    timesCorrect: 4,
    timesIncorrect: 2,
  },

  // Question 6
  {
    questionNumber: 6,
    category: "JavaScript Basics",
    question:
      "Which of the following object is the main entry point to all client-side JavaScript features and APIs?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Position",
    answerTwo: "Window",
    answerThree: "Standard",
    answerFour: "Location",
    answerFive: "None of the above",
    timesCorrect: 4,
    timesIncorrect: 2,
  },

  // Question 7
  {
    questionNumber: 7,
    category: "JavaScript Basics",
    question: "Which of the following scoping type does JavaScript use?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "Sequential",
    answerTwo: "Segmental",
    answerThree: "Lexical",
    answerFour: "Literal",
    answerFive: "None of the above",
    timesCorrect: 4,
    timesIncorrect: 2,
  },

  // Question 8
  {
    questionNumber: 8,
    category: "JavaScript Basics",
    question: "What is the basic difference between JavaScript and Java?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Functions are considered fields",
    answerTwo: "Functions are values, and there is no hard distinction between methods and fields",
    answerThree: "Variables are specific",
    answerFour: "There are no differences",
    timesCorrect: 4,
    timesIncorrect: 2,
  },

  // Question 9 (appears to be a duplicate of 8)

  // Question 10
  {
    questionNumber: 10,
    category: "Time and Space Complexity",
    question: "What is the time complexity of the 'splice' method in JavaScript?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Constant (O(1))",
    answerTwo: "Linear (O(n))",
    answerThree: "Quadratic (O(n^2))",
    answerFour: "Logarithmic (O(log n))",
    answerFive: "Exponential (O(2^n))",
    timesCorrect: 2,
    timesIncorrect: 6,
  },

  // Question 11
  {
    questionNumber: 11,
    category: "Time and Space Complexity",
    question: "What is the space complexity of a recursive function?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Constant (O(1))",
    answerTwo: "Linear (O(n))",
    answerThree: "Quadratic (O(n^2))",
    answerFour: "Linear (O(log n))",
    answerFive: "Exponential (O(2^n))",
  },

  // Question 12
  {
    questionNumber: 12,
    category: "Time and Space Complexity",
    question: "Which sorting algorithm has the best average-case time complexity?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Bubble Sort",
    answerTwo: "Merge Sort",
    answerThree: "Selection Sort",
    answerFour: "Quick Sort",
    answerFive: "Insertion Sort",
    timesCorrect: 1,
    timesIncorrect: 4,
  },

  // Question 13
  {
    questionNumber: 13,
    category: "Time and Space Complexity",
    question: "Data Structure Ops: Array (unsorted) -- Deletion",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(1)",
    answerTwo: "O(N)",
    answerThree: "O(log(n))",
    answerFour: "O(n log(n))",
    answerFive: "O(m)",
    timesCorrect: 1,
    timesIncorrect: 4,
  },

  // Question 14
  {
    questionNumber: 14,
    category: "Time and Space Complexity",
    question: "Data Structure Ops: Splay Tree (unsorted) -- Search(Average)",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "O(1)",
    answerTwo: "O(N)",
    answerThree: "O(log(n))",
    answerFour: "O(n log(n))",
    answerFive: "O(m)",
    timesCorrect: 1,
    timesIncorrect: 4,
  },

  // Question 15
  {
    questionNumber: 15,
    category: "Time and Space Complexity",
    question: "Data Structure Ops: AVL Tree (unsorted) -- Insertion(worst)",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "O(1)",
    answerTwo: "O(N)",
    answerThree: "O(log(n))",
    answerFour: "O(n log(n))",
    answerFive: "O(m)",
    timesCorrect: 1,
    timesIncorrect: 4,
  },

  // //////////////linked lists ////////////
  //// source https://www.interviewbit.com/linked-list-mcq/ ////

  {
    questionNumber: 16,
    category: "Linked Lists",
    question: "What information is stored in a doubly-linked list's nodes?",
    correctAnswerArray: [false, false, false, true],
    answerOne: "Value of node",
    answerTwo: "Address of next node",
    answerThree: "Address of previous node",
    answerFour: "All of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 17,
    category: "Linked Lists",
    question: "What is the optimal time complexity to count the number of nodes in a linked list?",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "O(n)",
    answerTwo: "O(1)",
    answerThree: "O(log n)",
    answerFour: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 18,
    category: "Linked Lists",
    question: "Which of the following are applications of linked lists?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Implementing file systems",
    answerTwo: "haining in hash tables",
    answerThree: "binary tree implementation",
    answerFour: "All of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 19,
    category: "Linked Lists",
    question:
      "Insertion of an element at the middle of a linked list requires the modification of how many pointers?",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "2",
    answerTwo: "1",
    answerThree: "3",
    answerFour: "4",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 20,
    category: "Linked Lists",
    question:
      "Insertion of an element at the end of a linked list requires the modification of how many pointers?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "2",
    answerTwo: "1",
    answerThree: "3",
    answerFour: "4",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 21,
    category: "Linked Lists",
    question:
      "In the worst case, the number of comparisons needed to search a singly linked list of length n for a given element will be?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(log n)",
    answerTwo: "O(n)",
    answerThree: "O(1)",
    answerFour: "O(n+m)",
    answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 22,
    category: "Linked Lists",
    question: "Which of the following algos is not feasible to implement in a linked list??",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Linear Search",
    answerTwo: "Binary Search",
    answerThree: "Merge Sort",
    answerFour: "Insertion Sort",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 23,
    category: "Linked Lists",
    question: "Which of the following algos is not feasible to implement in a linked list?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Linear Search",
    answerTwo: "Binary Search",
    answerThree: "Merge Sort",
    answerFour: "Insertion Sort",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 24,
    category: "Linked Lists",
    question: "Which of the following can be done with linked lists?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Implementation of Stacks and Queues",
    answerTwo: "Implementation of Binary Trees",
    answerThree: "Implementation of Data Structures that can simulate Dynamic Arrays",
    answerFour: "All of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 25,
    category: "Linked Lists",
    question: "What is the time complexity to insert an element to the front of a linked list?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "O(log n)",
    answerTwo: "O(n)",
    answerThree: "O(1)",
    answerFour: "O(n+m)",
    answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 26,
    category: "Linked Lists",
    question: "What is the time complexity to insert an element to the rear of a linked list?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(log n)",
    answerTwo: "O(n)",
    answerThree: "O(1)",
    answerFour: "O(n+m)",
    answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 27,
    category: "Linked Lists",
    question: "Linked lists nodes can be implemented using what?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "Structs",
    answerTwo: "lasses",
    answerThree: "Both",
    answerFour: "Neither",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 28,
    category: "Linked Lists",
    question:
      "Which type of linked list stores the address of the head node in the next pointer of the last node?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Singly",
    answerTwo: "Doubly",
    answerThree: "Hashed List",
    answerFour: "ircular",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 29,
    category: "Linked Lists",
    question: "What is the time complexity to delete a node from a doubly-linked list?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "O(log n)",
    answerTwo: "O(n)",
    answerThree: "O(1)",
    answerFour: "O(n+m)",
    answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 30,
    category: "Linked Lists",
    question: "What is the time complexity of a binary search on a linked list?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(log n)",
    answerTwo: "O(n)",
    answerThree: "O(1)",
    answerFour: "O(n+m)",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },

  {
    questionNumber: 31,
    category: "Linked Lists",
    question: "What is the time complexity to concatenate two linked lists?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "O(log n)",
    answerTwo: "O(n)",
    answerThree: "O(1)",
    answerFour: "O(1) if we have the address of the last node of one of the lists",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 32,
    category: "Linked Lists",
    question: "Which type of linked list traversals can be performed in both directions?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Singly",
    answerTwo: "Doubly",
    answerThree: "Circularly",
    answerFour: "None of the above",
    // answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 33,
    category: "Linked Lists",
    question:
      "Which of the following algorithm is the optimal way to find the middle element of a linked list?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Find the length, and then traverse to the length/2 node",
    answerTwo: "Fast and slow pointer method",
    answerThree: "Find distance of all nodes and print middle nodes",
    answerFour: "None of the above",
    // answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 34,
    category: "Linked Lists",
    question: "A linked list where none of the nodes contain a NULL pointer is?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "Singly",
    answerTwo: "Doubly",
    answerThree: "Circularly",
    answerFour: "None of the above",
    // answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 35,
    category: "Linked Lists",
    question: "Which of the following statements are true?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Random access of elements in a linked list is not possible",
    answerTwo: "Arrays have better cache locality than linked lists",
    answerThree: "The size of linked lists is dynamic and can be changed as needed.",
    answerFour: "All of the above",
    answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 36,
    category: "Linked Lists",
    question:
      "What is the optimal complexity we can achieve when removing duplicates from an unsorted linked list?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(log n)",
    answerTwo: "O(n)",
    answerThree: "O(1)",
    answerFour: "O(n^2)",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 37,
    category: "Linked Lists",
    question:
      "What is the optimal complexity we can achieve when removing duplicates from a sorted linked list?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(log n)",
    answerTwo: "O(n)",
    answerThree: "O(1)",
    answerFour: "O(n^2)",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 38,
    category: "Linked Lists",
    question: "Which of the following sorting algorithms can be applied to linked lists?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Merge Sort",
    answerTwo: "Insertion Sort",
    answerThree: "Quick Sort",
    answerFour: "All of the above",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 39,
    category: "Linked Lists",
    question: "What does the following code snippet do?",
    codeSnippet: `
    ListNode* solve(ListNode* head, int x) {
      ListNode* front = head;
      int count = 1;
      while(front != NULL) {
        cout << front -> data << " " << head -> data << endl;
        if(count <= x) {
          front = front -> next;
        }
        else {
          head = head -> next;
          front = front -> next;
        }
        count++;
      }
      return head;
    }    
    `,
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Find the xth node from beginning of a linked list",
    answerTwo: "Find xth node from end of a linked list",
    answerThree: "Find x-1th node from end of a linked list",
    answerFour: "All of the above",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 40,
    category: "Linked Lists",
    question: "What will be the output of the following code snippet for 1->2->3->4->5?",
    codeSnippet: `
    void solve (ListNode* head) {
      while(head != NULL) {
      cout << head -> data << " ";
      head = head -> next;
    }
  
    }    
    `,
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "21345",
    answerTwo: "12345",
    answerThree: "54321",
    answerFour: "23154",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 41,
    category: "Linked Lists",
    question: "What does the following code snippet do?",
    codeSnippet: `
    int solve (ListNode* list) {
      ListNode* fast = list;
    ListNode* slow = list;
    while(fast -> next != NULL && fast -> next -> next != NULL) {
      fast = fast -> next -> next;
      slow = slow -> next;
    }
    return slow -> data;
  
    }    
    `,
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "Find the middle element in the linked list",
    answerTwo: "Find the last element in the linked list",
    answerThree: "Find the first element in the linked list",
    answerFour: "None of the above",
    // answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 42,
    category: "Linked Lists",
    question: "What does the following code snippet do?",
    codeSnippet: `
    void solve(ListNode* node) {
      node = node -> next;  
    }    
    `,
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Deletes the given node from the linked list",
    answerTwo: "Deletes head of the list",
    answerThree: "Deletes the last node of the list",
    answerFour: "None of the above",
    // answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 43,
    category: "Linked Lists",
    question:
      "The type of pointer used to point to the address of the next element in a linked list",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "Pointer to character",
    answerTwo: "Pointer to integer",
    answerThree: "Pointer to node",
    answerFour: "All of the above",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 44,
    category: "Linked Lists",
    question: "Which is the most optimal to find an element at the kth position in a linked list?",
    correctAnswerArray: [],
    answerOne: "Singly Linked List",
    answerTwo: "Doubly Linked List",
    answerThree: "Circular Linked List",
    answerFour: "Array implementation of the linked list",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 45,
    category: "Linked Lists",
    question: "What is the time complexity of adding 2 numbers as a linked list?",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "O(max(n,m)) where n and m are sizes of the list",
    answerTwo: "O(n+m)",
    answerThree: "O(min(n,m))",
    answerFour: "None of the above",
    // answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 46,
    category: "Linked Lists",
    question: "Which of the following problems can be solved using two tortoise and hare pointers?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Detecting cycle in a linked list",
    answerTwo: "Finding the intersection of two linked lists",
    answerThree: "Finding the middle element of a linked list",
    answerFour: "All of the above",
    answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 47,
    category: "Linked Lists",
    question: "Which of the following is similar about singly and doubly linked lists?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne:
      "XBoth of them are not able to access the data at a random position in constant time",
    answerTwo:
      "XBoth of them can add a new node after a given node or at the beginning of a new list in O(1) time",
    answerThree: "Both of them can delete the first node in O(1) time. ",
    answerFour: "All of the above",
    answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 48,
    category: "Linked Lists",
    question: "Rotating a linked list by some places clockwise will take a TIME complexity of?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(log n)",
    answerTwo: "O(n)",
    answerThree: "O(1)",
    answerFour: "O(n^2)",
    answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 49,
    category: "Linked Lists",
    question: "Rotating a linked list by some places clockwise will take a SPACE complexity of?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "O(log n)",
    answerTwo: "O(n)",
    answerThree: "O(1)",
    answerFour: "O(n^2)",
    answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 50,
    category: "Linked Lists",
    question: "What is the space complexity for deleting a linked list?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "O(log n)",
    answerTwo: "O(n)",
    answerThree: "O(1)",
    answerFour: "O(n^2)",
    answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 51,
    category: "Linked Lists",
    question: "What is the space complexity for storing a linked list?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(log n)",
    answerTwo: "O(n)",
    answerThree: "O(1)",
    answerFour: "O(n^2)",
    answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 52,
    category: "Linked Lists",
    question: "Which of the following operations takes O(1) time?",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "Insert element at the start of linked list",
    answerTwo: "Insert element at end of linked list",
    answerThree: "Find length of linked list",
    answerFour: "None of the above",
    // answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 53,
    category: "Linked Lists",
    question: "What information stored by linked lists is used to implement binary trees?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Value of current node",
    answerTwo: "Pointer to left child",
    answerThree: "Pointer to right child",
    answerFour: "All of the above",
    answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 54,
    category: "Linked Lists",
    question: "Which of the following sorting algorithms is preferred to sort a linked list?",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "Merge Sort",
    answerTwo: "Quick Sort",
    answerThree: "Insertion",
    answerFour: "All of the above",
    answerFive: "None of the above",
    timesCorrect: 1,
    timesIncorrect: 2,
  },
  {
    questionNumber: 55,
    category: "JavaScript",
    question: "What is the use of 'this' keyword in JavaScript?",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "It refers to the current instance of the object",
    answerTwo: "It refers to the previous instance of the object",
    answerThree: "It refers to the global object",
    answerFour: "All of the above",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 56,
    category: "JavaScript",
    question:
      "Which method in an Array object is used to add and/or remove elements from an array?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "filter()",
    answerTwo: "map()",
    answerThree: "splice()",
    answerFour: "reduce()",
    answerFive: "indexOf()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 57,
    category: "Data Structures",
    question: "What data structure uses a Last In First Out (LIFO) method?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Queue",
    answerTwo: "Linked List",
    answerThree: "Array",
    answerFour: "Stack",
    answerFive: "Binary Tree",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 58,
    category: "Data Structures",
    question:
      "In binary search trees, where does a node with a value less than the parent node go?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "To the right",
    answerTwo: "To the root",
    answerThree: "To the left",
    answerFour: "None of the above",
    answerFive: "All of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 59,
    category: "Algorithms",
    question:
      "What is the time complexity of the quicksort algorithm in the average case scenario?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "O(n)",
    answerTwo: "O(1)",
    answerThree: "O(nlogn)",
    answerFour: "O(n^2)",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 60,
    category: "Algorithms",
    question:
      "In the Dijkstra's algorithm, which data structure is typically used to store the vertices?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Array",
    answerTwo: "Linked List",
    answerThree: "Stack",
    answerFour: "Heap",
    answerFive: "Hash Table",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 61,
    category: "JavaScript",
    question:
      "What type of JavaScript variable is mutable and allows properties to be added and removed?",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "Object",
    answerTwo: "Number",
    answerThree: "String",
    answerFour: "Boolean",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 62,
    category: "JavaScript",
    question: "Which method is used to remove the last element from a JavaScript array?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "shift()",
    answerTwo: "pop()",
    answerThree: "push()",
    answerFour: "unshift()",
    answerFive: "splice()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 63,
    category: "Data Structures",
    question: "In hash tables, what technique helps handle collisions?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "Binary Search",
    answerTwo: "Dynamic Programming",
    answerThree: "Double Hashing",
    answerFour: "Radix Sort",
    answerFive: "All of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 64,
    category: "Algorithms",
    question: "Which of the following is not a type of sorting algorithm?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Bubble Sort",
    answerTwo: "Prim's Algorithm",
    answerThree: "Heap Sort",
    answerFour: "Quick Sort",
    answerFive: "Insertion Sort",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 65,
    category: "Binary Search Trees",
    question: "What is the time complexity of searching for an element in a binary search tree?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(n^2)",
    answerTwo: "O(logn)",
    answerThree: "O(n)",
    answerFour: "O(1)",
    answerFive: "O(nlogn)",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 66,
    category: "Binary Search Trees",
    question: "What does the following JavaScript code do?",
    codeSnippet: `
    function isBST(node, min = null, max = null) {
      if (node === null) {
          return true;
      }
      if ((min !== null && node.val <= min) || (max !== null && node.val > max)) {
          return false;
      }
      return isBST(node.left, min, node.val) && isBST(node.right, node.val, max);
    }
    `,
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "Returns the sum of all nodes in a binary search tree",
    answerTwo: "Returns a binary search tree after deleting a specific node",
    answerThree: "Checks if a given binary tree is a binary search tree",
    answerFour: "Finds the smallest element in a binary search tree",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 67,
    category: "Binary Search Trees",
    question: "In a binary search tree, which traversal method results in a sorted order of nodes?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "Preorder traversal",
    answerTwo: "Postorder traversal",
    answerThree: "Inorder traversal",
    answerFour: "Level-order traversal",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 68,
    category: "Binary Search Trees",
    question:
      "What operation would give a worst-case time complexity of O(n) in a binary search tree?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Insertion",
    answerTwo: "Deletion",
    answerThree: "Search",
    answerFour: "All of the above",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 69,
    category: "Binary Search Trees",
    question: "What does the following JavaScript code do?",
    codeSnippet: `
    function findMin(root) {
      let current = root;
      while (current.left !== null) {
          current = current.left;
      }
      return current.key;
    }
    `,
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "Returns the minimum element in a binary search tree",
    answerTwo: "Returns the maximum element in a binary search tree",
    answerThree: "Returns the sum of all elements in a binary search tree",
    answerFour: "Returns the height of the binary search tree",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 70,
    category: "Binary Search Trees",
    question:
      "In a binary search tree, the left child is _______ than the parent, and the right child is _______ than the parent.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "larger, smaller",
    answerTwo: "smaller, larger",
    answerThree: "larger, larger",
    answerFour: "smaller, smaller",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 71,
    category: "Binary Trees",
    question: "What is the maximum number of nodes at level 'l' in a binary tree?",
    correctAnswerArray: [false, false, false, false, true],
    answerOne: "l",
    answerTwo: "l^2",
    answerThree: "L^2",
    answerFour: "l!",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 72,
    category: "Binary Trees",
    question: "What is the time complexity of in-order tree traversal in a binary tree?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "O(logn)",
    answerTwo: "O(n^2)",
    answerThree: "O(n)",
    answerFour: "O(1)",
    answerFive: "O(nlogn)",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 73,
    category: "Binary Trees",
    question: "What does the following JavaScript code do?",
    codeSnippet: `
    function height(root) {
      if (root === null) {
          return -1;
      } else {
          return Math.max(height(root.left), height(root.right)) + 1;
      }
    }
    `,
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Finds the sum of all elements in the binary tree",
    answerTwo: "Finds the height of the binary tree",
    answerThree: "Finds the largest element in the binary tree",
    answerFour: "Checks if the binary tree is balanced",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 74,
    category: "Binary Search Trees",
    question:
      "What is the time complexity of the worst case for insert operation in a Binary Search Tree?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "O(1)",
    answerTwo: "O(logn)",
    answerThree: "O(nlogn)",
    answerFour: "O(n)",
    answerFive: "O(n^2)",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 75,
    category: "Binary Search Trees",
    question: "What does the following JavaScript code do?",
    codeSnippet: `
    function isBalanced(root) {
      if (root === null) {
          return true;
      }
      const leftHeight = height(root.left);
      const rightHeight = height(root.right);
      return (
        Math.abs(leftHeight - rightHeight) <= 1 &&
        isBalanced(root.left) &&
        isBalanced(root.right)
      );
    }
    `,
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "Checks if the binary tree is balanced",
    answerTwo: "Returns the height of the binary tree",
    answerThree: "Checks if the binary tree is a binary search tree",
    answerFour: "Finds the largest element in the binary tree",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 76,
    category: "Binary Search Trees",
    question: "What does 'balanced' mean in the context of Binary Search Trees?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "All nodes have two children",
    answerTwo: "The tree is fully filled",
    answerThree: "There are no duplicate nodes",
    answerFour: "The height of the left and right subtrees of every node differ by no more than 1",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 77,
    category: "Binary Trees",
    question: "What type of binary tree is used for Huffman coding?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "Binary Search Tree",
    answerTwo: "B+ Tree",
    answerThree: "Binary Heap",
    answerFour: "AVL Tree",
    answerFive: "Red-Black Tree",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 78,
    category: "Binary Search Trees",
    question:
      "In the context of Binary Search Trees, what does the term 'in-order predecessor' mean?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "The node with the highest value",
    answerTwo: "The parent node",
    answerThree: "The node with the next lower value",
    answerFour: "The left child of a node",
    answerFive: "The right child of a node",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 79,
    category: "JavaScript Data Structures",
    question: "What will be the output of the following JavaScript code?",
    codeSnippet: `
    let arr = [10, 20, 30, 40, 50];
    console.log(arr.length);
    `,
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "5",
    answerTwo: "50",
    answerThree: "10",
    answerFour: "4",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 80,
    category: "JavaScript Data Structures",
    question: "What will be the output of the following JavaScript code?",
    codeSnippet: `
    let set = new Set();
    set.add(1);
    set.add(2);
    set.add(3);
    console.log(set.has(2));
    `,
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "False",
    answerTwo: "True",
    answerThree: "3",
    answerFour: "2",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 81,
    category: "JavaScript Data Structures",
    question: "What is the time complexity of adding an element to a JavaScript array?",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "O(1)",
    answerTwo: "O(n)",
    answerThree: "O(nlogn)",
    answerFour: "O(logn)",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 82,
    category: "JavaScript Data Structures",
    question: "What data structure is ideally suited for a first-in-first-out (FIFO) process?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Set",
    answerTwo: "Array",
    answerThree: "Stack",
    answerFour: "Queue",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 83,
    category: "JavaScript Data Structures",
    question: "What will be the output of the following JavaScript code?",
    codeSnippet: `
    let map = new Map();
    map.set('name', 'John');
    console.log(map.get('name'));
    `,
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "name",
    answerTwo: "undefined",
    answerThree: "John",
    answerFour: "null",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 84,
    category: "JavaScript Data Structures",
    question: "Which method removes the last element from an array and returns that element?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "shift()",
    answerTwo: "unshift()",
    answerThree: "pop()",
    answerFour: "push()",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 85,
    category: "JavaScript Data Structures",
    question: "What will be the output of the following JavaScript code?",
    codeSnippet: `
    let arr = [1, 2, 3, 4, 5];
    arr.splice(2, 1);
    console.log(arr);
    `,
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "[1, 2, 3, 4, 5]",
    answerTwo: "[1, 2, 4, 5]",
    answerThree: "[1, 3, 4, 5]",
    answerFour: "[2, 3, 4, 5]",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 86,
    category: "JavaScript Data Structures",
    question: "Which of the following is not a built-in JavaScript data structure?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Linked List",
    answerTwo: "Heap",
    answerThree: "Set",
    answerFour: "Map",
    answerFive: "Array",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 87,
    category: "JavaScript Data Structures",
    question: "What will be the output of the following JavaScript code?",
    codeSnippet: `
    let stack = [];
    stack.push(1);
    stack.push(2);
    console.log(stack.pop());
    `,
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "1",
    answerTwo: "2",
    answerThree: "undefined",
    answerFour: "null",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 88,
    category: "JavaScript Data Structures",
    question: "What is the time complexity to access an element in a JavaScript array by index?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(n)",
    answerTwo: "O(1)",
    answerThree: "O(nlogn)",
    answerFour: "O(logn)",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 89,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    list = [1, 2, 3, 4, 5]
    print(len(list))
    `,
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "5",
    answerTwo: "1",
    answerThree: "2",
    answerFour: "3",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 90,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    dict = {'Name': 'Zara', 'Age': 7}
    print("Value : %s" %  dict.get('Age'))
    `,
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Name",
    answerTwo: "7",
    answerThree: "Zara",
    answerFour: "None",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 91,
    category: "Python Data Structures",
    question: "What is the time complexity of appending an element to a Python list?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(n)",
    answerTwo: "O(1)",
    answerThree: "O(nlogn)",
    answerFour: "O(logn)",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 92,
    category: "Python Data Structures",
    question: "What data structure is ideally suited for a first-in-first-out (FIFO) process?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "List",
    answerTwo: "Dict",
    answerThree: "Stack",
    answerFour: "Queue",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 93,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    stack = [3, 4, 5]
    stack.append(6)
    stack.append(7)
    print(stack)
    `,
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "[3, 4, 5]",
    answerTwo: "[3, 4, 5, 6, 7]",
    answerThree: "[6, 7]",
    answerFour: "[7, 6, 5, 4, 3]",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 94,
    category: "Python Data Structures",
    question: "Which method removes the last element from a list and returns that element?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "shift()",
    answerTwo: "unshift()",
    answerThree: "pop()",
    answerFour: "push()",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 95,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    queue = [3, 4, 5]
    queue.append(6)
    queue.append(7)
    queue.pop(0)
    print(queue)
    `,
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "[3, 4, 5]",
    answerTwo: "[3, 4, 5, 6, 7]",
    answerThree: "[4, 5, 6, 7]",
    answerFour: "[7, 6, 5, 4]",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 96,
    category: "Python Data Structures",
    question: "Which of the following is not a built-in Python data structure?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Linked List",
    answerTwo: "Heap",
    answerThree: "Set",
    answerFour: "Dict",
    answerFive: "List",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 97,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    stack = [3, 4, 5]
    stack.append(6)
    stack.append(7)
    print(stack.pop())
    `,
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "3",
    answerTwo: "7",
    answerThree: "5",
    answerFour: "None",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 98,
    category: "Python Data Structures",
    question: "What is the time complexity to access an element in a Python list by index?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(n)",
    answerTwo: "O(1)",
    answerThree: "O(nlogn)",
    answerFour: "O(logn)",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 99,
    category: "Python Data Structures",
    question: "How do you define an empty set in Python?",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "set()",
    answerTwo: "{}",
    answerThree: "Set()",
    answerFour: "[]",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 100,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    dict = {'a': 1, 'b': 2, 'c': 3}
    print(len(dict))
    `,
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "2",
    answerTwo: "3",
    answerThree: "1",
    answerFour: "0",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 101,
    category: "Python Data Structures",
    question:
      "What is the time complexity of checking whether an element is present in a Python set?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(n)",
    answerTwo: "O(1)",
    answerThree: "O(nlogn)",
    answerFour: "O(logn)",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 102,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    dict = {'a': 1, 'b': 2, 'c': 3}
    print('b' in dict)
    `,
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "False",
    answerTwo: "True",
    answerThree: "None",
    answerFour: "3",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 103,
    category: "Python Data Structures",
    question: "Which of the following Python data structures is ordered?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Set",
    answerTwo: "Dictionary",
    answerThree: "Both of the above",
    answerFour: "None of the above",
    answerFive: "List",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 104,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    tup = ('physics', 'chemistry', 1997, 2000)
    print(len(tup))
    `,
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "3",
    answerTwo: "1",
    answerThree: "None",
    answerFour: "4",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 105,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    tup1 = (50,)
    print(type(tup1))
    `,
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Int",
    answerTwo: "<class 'tuple'>",
    answerThree: "<class 'list'>",
    answerFour: "<class 'str'>",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 106,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    dict = {['Name']: 'Zara', 'Age': 7}
    print("Value : %s" %  dict.get('Name'))
    `,
    correctAnswerArray: [false, false, false, false, true],
    answerOne: "Zara",
    answerTwo: "None",
    answerThree: "Age",
    answerFour: "7",
    answerFive: "TypeError: unhashable type: 'list'",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 107,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    list1 = ['physics', 'chemistry', 1997, 2000]
    list1.remove(1997)
    print(list1)
    `,
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "['physics', 'chemistry', 2000]",
    answerTwo: "['physics', 'chemistry']",
    answerThree: "['physics', 'chemistry', 1997]",
    answerFour: "['physics', 'chemistry', 1997, 2000]",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 108,
    category: "Python Data Structures",
    question: "What is the time complexity to access an element in a Python tuple by index?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(n)",
    answerTwo: "O(1)",
    answerThree: "O(nlogn)",
    answerFour: "O(logn)",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 109,
    category: "Linked Lists",
    question: "What does this code snippet accomplish?",
    codeSnippet: `
    const fakeFunctionName = function(head) {
      let prev = null;
      let current = head;
      let next = null;
  
      while(current){
          next = current.next;
          current.next = prev;
          prev = current;
          current = next;
      }
      return prev
  };
    `,
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "Finds middle node",
    answerTwo: "Finds list length",
    answerThree: "Reverses Linked List",
    answerFour: "Adds new nodes",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 110,
    category: "Linked Lists",
    question: "What does this code snippet accomplish?",
    codeSnippet: `
    def fakeFunctionName (self, head):
      prev = None
      current = head
      after = None

      while(current):
          after = current.next
          current.next = prev
          prev = current
          current = after
      
      return prev
    `,
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "Finds middle node",
    answerTwo: "Finds list length",
    answerThree: "Reverses Linked List",
    answerFour: "Adds new nodes",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 111,
    category: "JavaScript Algorithms",
    question: "_______ is a JavaScript method used to combine two or more arrays.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "Array.join()",
    answerTwo: "Array.splice()",
    answerThree: "Array.concat()",
    answerFour: "Array.merge()",
    answerFive: "Array.combine()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 112,
    category: "JavaScript Linked Lists",
    question:
      "In JavaScript, _______ is not a built-in data structure, but can be implemented using objects and pointers.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Array",
    answerTwo: "Stack",
    answerThree: "Queue",
    answerFour: "Linked List",
    answerFive: "Set",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 113,
    category: "JavaScript Algorithms",
    question:
      "The _______ method is used to find the index of the first occurrence of a specified element in an array.",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "Array.indexOf()",
    answerTwo: "Array.search()",
    answerThree: "Array.find()",
    answerFour: "Array.positionOf()",
    answerFive: "Array.locate()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 114,
    category: "JavaScript Binary Trees",
    question: "In a binary search tree (BST), all nodes to the left of a node have values _______.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "greater than the node's value",
    answerTwo: "equal to the node's value",
    answerThree: "not related to the node's value",
    answerFour: "less than the node's value",
    answerFive: "greater than or equal to the node's value",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 115,
    category: "JavaScript Graphs",
    question: "_______ is a path finding algorithm that uses a heuristic to guide its search.",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "A*",
    answerTwo: "Breadth-First Search",
    answerThree: "Depth-First Search",
    answerFour: "Dijkstra's Algorithm",
    answerFive: "Binary Search",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 116,
    category: "JavaScript Algorithms",
    question:
      "The JavaScript _______ method is used to test whether at least one element in the array passes the test implemented by the provided function.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "every()",
    answerTwo: "filter()",
    answerThree: "some()",
    answerFour: "all()",
    answerFive: "find()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 117,
    category: "JavaScript Binary Trees",
    question:
      "In a complete binary tree, every level, except possibly the last, is completely filled, and all nodes in the last level are as far _______ as possible.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "right",
    answerTwo: "up",
    answerThree: "left",
    answerFour: "down",
    answerFive: "middle",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 118,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the _______ method creates a new array populated with the results of calling a provided function on every element in the calling array.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "forEach()",
    answerTwo: "filter()",
    answerThree: "reduce()",
    answerFour: "map()",
    answerFive: "each()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 119,
    category: "JavaScript Graphs",
    question: "_______ is a method to traverse every vertex of a graph or tree data structure.",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "Breadth-First Search",
    answerTwo: "Depth-Last Search",
    answerThree: "Breadth-Last Search",
    answerFour: "Depth-Only Search",
    answerFive: "Shallow Search",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 120,
    category: "JavaScript Linked Lists",
    question:
      "When implementing a linked list in JavaScript, each node typically has properties for _______.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "next and value",
    answerTwo: "value and next",
    answerThree: "prev and value",
    answerFour: "next and key",
    answerFive: "key and value",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 121,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, _______ is a function that creates a new array with the results of calling a provided function on every element in the calling array.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "forEach()",
    answerTwo: "map()",
    answerThree: "each()",
    answerFour: "filter()",
    answerFive: "reduce()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 122,
    category: "JavaScript Graphs",
    question:
      "A graph data structure that uses a parent-child concept, but without cycles, is called a _______.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Cycle Graph",
    answerTwo: "Linked Graph",
    answerThree: "Bi-Directional Graph",
    answerFour: "Tree",
    answerFive: "Rooted Graph",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 123,
    category: "JavaScript Algorithms",
    question: "_______ is a JavaScript array method that reduces the array to a single value.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "reduceRight()",
    answerTwo: "oncat()",
    answerThree: "flatten()",
    answerFour: "reduce()",
    answerFive: "merge()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 124,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the _______ method creates a new array with all sub-array elements concatenated into it recursively up to the specified depth.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "merge()",
    answerTwo: "ombine()",
    answerThree: "flatten()",
    answerFour: "flat()",
    answerFive: "reduce()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 125,
    category: "JavaScript Binary Trees",
    question:
      "In JavaScript, a binary tree can be traversed in _______ order, where each node is processed between subtrees.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "post-order",
    answerTwo: "pre-order",
    answerThree: "in-order",
    answerFour: "breadth-first",
    answerFive: "depth-first",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 126,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the _______ array method can be used to determine whether a given element exists in an array, returning a boolean.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "has()",
    answerTwo: "exist()",
    answerThree: "includes()",
    answerFour: "contains()",
    answerFive: "within()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 127,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, to combine the elements of an array into a string, you can use the _______ method.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "collect()",
    answerTwo: "gather()",
    answerThree: "concat()",
    answerFour: "join()",
    answerFive: "group()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 128,
    category: "JavaScript Binary Trees",
    question: "In a binary tree, a node that has no children is known as a _______.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "root",
    answerTwo: "leaf",
    answerThree: "branch",
    answerFour: "twig",
    answerFive: "stem",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 129,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, to reverse the order of elements in an array, you can use the _______ method.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "turn()",
    answerTwo: "swap()",
    answerThree: "invert()",
    answerFour: "reverse()",
    answerFive: "flip()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 130,
    category: "JavaScript Linked Lists",
    question: "In a doubly linked list, each node has a reference to the _______.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "next node and previous root",
    answerTwo: "previous node and next root",
    answerThree: "next node and previous node",
    answerFour: "next root and previous root",
    answerFive: "previous leaf and next leaf",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 131,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the _______ array method can be used to modify the contents of an array by removing or replacing existing elements and/or adding new elements in place.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "modify()",
    answerTwo: "splice()",
    answerThree: "mutate()",
    answerFour: "shift()",
    answerFive: "edit()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 132,
    category: "JavaScript Algorithms",
    question:
      "The time complexity of the quicksort algorithm in the worst case scenario is _______.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "O(n)",
    answerTwo: "O(log n)",
    answerThree: "O(n log n)",
    answerFour: "O(n^2)",
    answerFive: "O(n!)",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 133,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the _______ array method can be used to remove the first item from an array.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "remove()",
    answerTwo: "shift()",
    answerThree: "pop()",
    answerFour: "extract()",
    answerFive: "delete()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 134,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, to copy an array, you can use the _______ method, which creates a new array with all sub-array elements concatenated into it recursively up to the specified depth.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "splice()",
    answerTwo: "slice()",
    answerThree: "cut()",
    answerFour: "copy()",
    answerFive: "duplicate()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 135,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, to merge two or more objects into a new object without modifying the original objects, you can use the _______ method.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "join()",
    answerTwo: "oncat()",
    answerThree: "Object.assign()",
    answerFour: "Object.merge()",
    answerFive: "Object.combine()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 136,
    category: "JavaScript Algorithms",
    question:
      "The time complexity of accessing an item in a JavaScript object by its key is _______.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "O(n)",
    answerTwo: "O(1)",
    answerThree: "O(n log n)",
    answerFour: "O(n^2)",
    answerFive: "O(log n)",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 137,
    category: "JavaScript Algorithms",
    question:
      "The _______ method is used in JavaScript to execute a function once for each array element, and returns a new array with the modified items.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "change()",
    answerTwo: "map()",
    answerThree: "transform()",
    answerFour: "modify()",
    answerFive: "iterate()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 138,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the time complexity of searching for an item in an unsorted array is _______.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "O(log n)",
    answerTwo: "O(1)",
    answerThree: "O(n)",
    answerFour: "O(n^2)",
    answerFive: "O(n log n)",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 139,
    category: "JavaScript Algorithms",
    question: "In JavaScript, the _______ method can be used to add items to the end of an array.",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "push()",
    answerTwo: "append()",
    answerThree: "add()",
    answerFour: "insert()",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 140,
    category: "JavaScript Algorithms",
    question: "In JavaScript, the _______ method can be used to sort an array.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "order()",
    answerTwo: "arrange()",
    answerThree: "sort()",
    answerFour: "sequence()",
    answerFive: "rank()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 141,
    category: "JavaScript Data Structures",
    question: "In a JavaScript object, keys are always of type _______.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "number",
    answerTwo: "object",
    answerThree: "boolean",
    answerFour: "string",
    answerFive: "array",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 142,
    category: "JavaScript Data Structures",
    question: "In a JavaScript Set object, each value must be _______.",
    correctAnswerArray: [false, false, false, true, true],
    answerOne: "a string",
    answerTwo: "a number",
    answerThree: "an array",
    answerFour: "an object",
    answerFive: "unique",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 143,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, to return the first index at which a given element can be found in the array, you can use the _______ method.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "first()",
    answerTwo: "locate()",
    answerThree: "position()",
    answerFour: "indexOf()",
    answerFive: "indexAt()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 144,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the _______ method returns a new string with some or all matches of a pattern replaced by a replacement.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "change()",
    answerTwo: "switch()",
    answerThree: "alter()",
    answerFour: "replace()",
    answerFive: "swap()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 145,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the _______ method executes a reducer function (that you provide) on each element of the array, resulting in a single output value.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "compress()",
    answerTwo: "ombine()",
    answerThree: "mingle()",
    answerFour: "reduce()",
    answerFive: "join()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 146,
    category: "Python Data Structures",
    question: "In Python, to add an item to the end of the list, you can use the _______ method.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "push()",
    answerTwo: "append()",
    answerThree: "insert()",
    answerFour: "add()",
    answerFive: "attach()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 147,
    category: "Python Data Structures",
    question:
      "In Python, the _______ data structure is a collection which is unordered, changeable and indexed. It has no duplicate elements.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "tuple",
    answerTwo: "list",
    answerThree: "array",
    answerFour: "set",
    answerFive: "dictionary",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 148,
    category: "Python Algorithms",
    question:
      "In Python, the _______ function can be used to return the number of times a specified value appears in the string.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "appear()",
    answerTwo: "count()",
    answerThree: "number()",
    answerFour: "total()",
    answerFive: "quantity()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 149,
    category: "Python Data Structures",
    question:
      "In Python, a _______ is a collection which is ordered and unchangeable. It allows duplicate members.",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "tuple",
    answerTwo: "set",
    answerThree: "dictionary",
    answerFour: "list",
    answerFive: "array",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 150,
    category: "Python Algorithms",
    question:
      "In Python, the _______ function can be used to return a string which is a concatenation of all strings in an iterable.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "merge()",
    answerTwo: "attach()",
    answerThree: "join()",
    answerFour: "combine()",
    answerFive: "link()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 151,
    category: "Python Algorithms",
    question:
      "In Python, the time complexity of searching for an item in a sorted list using binary search is _______.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "O(n)",
    answerTwo: "O(1)",
    answerThree: "O(n^2)",
    answerFour: "O(log n)",
    answerFive: "O(n log n)",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 152,
    category: "Python Data Structures",
    question:
      "In Python, the _______ data structure is a collection which is unordered, changeable and indexed. It does not allow duplicate values.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "set",
    answerTwo: "tuple",
    answerThree: "dictionary",
    answerFour: "list",
    answerFive: "array",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 153,
    category: "Python Data Structures",
    question:
      "In Python, a _______ is a collection which is ordered and changeable. It allows duplicate members.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "tuple",
    answerTwo: "list",
    answerThree: "dictionary",
    answerFour: "set",
    answerFive: "array",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 154,
    category: "Python Algorithms",
    question:
      "In Python, the _______ method returns a string with a certain number of leading characters removed. The leading characters to be removed are specified as parameters.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "remove()",
    answerTwo: "strip()",
    answerThree: "lstrip()",
    answerFour: "delete()",
    answerFive: "cut()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 155,
    category: "Python Algorithms",
    question:
      "In Python, the _______ function can be used to return the length (the number of items) of an object.",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "len()",
    answerTwo: "size()",
    answerThree: "quantity()",
    answerFour: "amount()",
    answerFive: "total()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },

  {
    questionNumber: 156,
    category: "React and React-Redux",
    question:
      "In React 18, ________ lets you prepare multiple versions of the UI in memory and switch between them without causing a re-render.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Component swapping",
    answerTwo: "React Server Components",
    answerThree: "React Virtualization",
    answerFour: "React State Transition",
    answerFive: "React Memory Buffer",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 157,
    category: "React and React-Redux",
    question:
      "The _______ method is used in React and React-Redux to wrap a root and its descendants so updates to them can be batched together.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "batchUpdate()",
    answerTwo: "createRoot()",
    answerThree: "root()",
    answerFour: "rootBatch()",
    answerFive: "createBatch()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 158,
    category: "React and React-Redux",
    question:
      "React 18 introduces _______ that helps to automatically batch multiple state updates into a single render pass.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "Render Optimization",
    answerTwo: "Single Pass Rendering",
    answerThree: "automatic batching",
    answerFour: "State Aggregation",
    answerFive: "Batch State Update",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 159,
    category: "React and React-Redux",
    question:
      "React 18 introduced a new API called ________ that allows developers to suspend and resume rendering on a per-component basis.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "renderControl()",
    answerTwo: "suspense",
    answerThree: "renderPause()",
    answerFour: "renderSuspense()",
    answerFive: "suspend()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 160,
    category: "React and React-Redux",
    question:
      "In React and React-Redux, _______ can be used for controlling the visual loading sequence of a component.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "componentLoading()",
    answerTwo: "loadingControl()",
    answerThree: "startTransition",
    answerFour: "componentSequence()",
    answerFive: "startLoading()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 161,
    category: "React and React-Redux",
    question:
      "The _______ API in React and React-Redux is used to inform React about a state update that can be interrupted by other more important updates.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "intermediateState()",
    answerTwo: "interruptibleUpdate()",
    answerThree: "startTransition()",
    answerFour: "prioritizeUpdate()",
    answerFive: "stateTransition()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 162,
    category: "React and React-Redux",
    question:
      "In React and React-Redux, _______ is a new type of component that can be rendered on the server and then sent to the client as HTML.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "HTML Component",
    answerTwo: "Server Component",
    answerThree: "Transfer Component",
    answerFour: "Server HTML Component",
    answerFive: "Remote Component",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 163,
    category: "React and React-Redux",
    question:
      "In React 18, _______ is the way to create a root for a React tree, used as a replacement for `ReactDOM.render()`.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "React.create()",
    answerTwo: "React.initialize()",
    answerThree: "ReactDOM.createRoot()",
    answerFour: "React.root()",
    answerFive: "ReactDOM.initializeRoot()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 164,
    category: "React and React-Redux",
    question:
      "React 18 introduces a built-in _______ API that allows React to avoid unnecessary layout computations and browser renders.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Computation Manager",
    answerTwo: "concurrent rendering",
    answerThree: "Render Optimizer",
    answerFour: "Layout Manager",
    answerFive: "Browser Renderer",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 165,
    category: "React and React-Redux",
    question:
      "React 18's _______ enables select parts of your UI to update and render immediately, while others update later.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "Render Prioritization",
    answerTwo: "Selective Rendering",
    answerThree: "Update Prioritization",
    answerFour: "selective hydration",
    answerFive: "UI Segmenting",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 166,
    category: "React and React-Redux",
    question: "In React 18, _______ let you split a rendering task into multiple smaller tasks.",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "React.startTransition()",
    answerTwo: "React.split()",
    answerThree: "React.fragment()",
    answerFour: "React.parts()",
    answerFive: "React.task()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 167,
    category: "React and React-Redux",
    question:
      "React 18 introduced the _______ method that enables you to block a transition from finishing until some condition is met.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "blockTransition()",
    answerTwo: "holdTransition()",
    answerThree: "suspendTransition()",
    answerFour: "useTransition()",
    answerFive: "delayTransition()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 168,
    category: "React and React-Redux",
    question:
      "React 18's _______ mechanism allows users to interact with the page during a large update, providing a smoother user experience.",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "Interruptible Rendering",
    answerTwo: "UI Decoupling",
    answerThree: "User Interactivity",
    answerFour: "Update Pausing",
    answerFive: "Render Throttling",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 169,
    category: "React and React-Redux",
    question:
      "In React 18, _______ is a feature that allows you to defer rendering for certain parts of your application to improve perceived performance.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "Defer Rendering",
    answerTwo: "Delay Rendering",
    answerThree: "suspense",
    answerFour: "Postpone Rendering",
    answerFive: "Render Later",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 171,
    category: "React and React-Redux",
    question:
      "In React 17, the new JSX Transform eliminated the need for ________ in your JSX code.",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "React.createElement()",
    answerTwo: "React.JSX()",
    answerThree: "React.transformJSX()",
    answerFour: "React.compileJSX()",
    answerFive: "React.generateJS()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 172,
    category: "React and React-Redux",
    question:
      "In React-Redux, _______ is a function that allows you to extract data from the Redux store state.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "useData()",
    answerTwo: "useSelector()",
    answerThree: "useState()",
    answerFour: "useStore()",
    answerFive: "useExtract()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 173,
    category: "React and React-Redux",
    question: "In React-Redux, the _______ hook dispatches actions to the store.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "useDispatchAction()",
    answerTwo: "useDispatch()",
    answerThree: "useAction()",
    answerFour: "useStoreDispatch()",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 174,
    category: "React and React-Redux",
    question:
      "In React 18, _______ lets you prepare a new version of a component in memory, which can replace the current one on screen when ready.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "usePrepare()",
    answerTwo: "useTransition()",
    answerThree: "useVersion()",
    answerFour: "useReplace()",
    answerFive: "useComponent()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 175,
    category: "React and React-Redux",
    question:
      "In React-Redux, _______ is a higher order function that connects a React component to the Redux store.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "link()",
    answerTwo: "onnectRedux()",
    answerThree: "connect()",
    answerFour: "storeLink()",
    answerFive: "connectStore()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 176,
    category: "React and React-Redux",
    question:
      "In React 18, the _______ API allows you to start a transition, providing a way to coordinate changes to your components with different levels of priority.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "useChange()",
    answerTwo: "useShift()",
    answerThree: "startTransition()",
    answerFour: "useTransition()",
    answerFive: "startChange()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 177,
    category: "React and React-Redux",
    question:
      "In React-Redux, the _______ is a function of the store that allows you to dispatch actions.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "action()",
    answerTwo: "dispatch()",
    answerThree: "send()",
    answerFour: "pushAction()",
    answerFive: "None of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 178,
    category: "React and React-Redux",
    question:
      "In React, _______ are used to split components into non-visual logic and visual parts.",
    correctAnswerArray: [false, false, true, false, true],
    answerOne: "Dividers",
    answerTwo: "Decomposers",
    answerThree: "Hooks",
    answerFour: "Breakers",
    answerFive: "Splitting Tools",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 179,
    category: "React and React-Redux",
    question:
      "In React, _______ is a concept that allows a component to maintain internal state data, independently managing it itself.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Internal Data Management",
    answerTwo: "State",
    answerThree: "Component Data",
    answerFour: "Self-Containment",
    answerFive: "Data Independence",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 180,
    category: "React and React-Redux",
    question: "In React-Redux, the _______ is the central repository of all state data.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "Data Center",
    answerTwo: "Store",
    answerThree: "State Repository",
    answerFour: "Data Repository",
    answerFive: "State Center",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 181,
    category: "React and React-Redux",
    question: "_______ hook lets you read the state from the Redux store.",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "useSelector()",
    answerTwo: "useDispatch()",
    answerThree: "useReact()",
    answerFour: "useStore()",
    answerFive: "useContext()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 182,
    category: "React and React-Redux",
    question: "React components are often written in a format known as _______.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "JavaScriptXML",
    answerTwo: "JSX",
    answerThree: "HTMLJS",
    answerFour: "JavaScriptHTML",
    answerFive: "Java Scripting XML",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 183,
    category: "React and React-Redux",
    question: "React components defined as classes have additional features, such as _______.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "UseState",
    answerTwo: "Lifecycle methods",
    answerThree: "UseContext",
    answerFour: "RenderProps",
    answerFive: "UseEffect",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 184,
    category: "React and React-Redux",
    question: "The _______ hook is used to manage local state of a function component in React.",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "useState()",
    answerTwo: "useClass()",
    answerThree: "useStore()",
    answerFour: "useVariable()",
    answerFive: "useObject()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 185,
    category: "React and React-Redux",
    question: "In React-Redux, a _______ is a function that creates an action object.",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "Action Creator",
    answerTwo: "Store Creator",
    answerThree: "Object Maker",
    answerFour: "Action Producer",
    answerFive: "State Generator",
    timesCorrect: 0,
    timesIncorrect: 0,
  },

  {
    questionNumber: 186,
    category: "Express.js",
    question: "Express.js is a _______ web application framework for Node.js.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "modular",
    answerTwo: "structured",
    answerThree: "systematic",
    answerFour: "minimalist",
    answerFive: "simplified",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 187,
    category: "Express.js",
    question:
      "Express.js provides a robust set of features for web and mobile applications including a myriad of HTTP _______ methods and middleware.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "processing",
    answerTwo: "helper",
    answerThree: "handler",
    answerFour: "responding",
    answerFive: "interaction",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 188,
    category: "Express.js",
    question:
      "In Express.js, _______ are functions that have access to the request object, the response object, and the next function in the application's request-response cycle.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "handlers",
    answerTwo: "processors",
    answerThree: "middleware functions",
    answerFour: "responders",
    answerFive: "translators",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 189,
    category: "Express.js",
    question:
      "In Express.js, the order of _______ defined is very important as they are executed in the order they are defined.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "responses",
    answerTwo: "requests",
    answerThree: "middleware",
    answerFour: "routes",
    answerFive: "callbacks",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 190,
    category: "Express.js",
    question:
      "To set up a basic server in Express.js, you would use the _______ method of an Express app instance.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "start",
    answerTwo: "run",
    answerThree: "serve",
    answerFour: "listen",
    answerFive: "init",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 191,
    category: "Express.js",
    question: "In Express.js, app.use() is used to add _______ to your application.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "features",
    answerTwo: "functions",
    answerThree: "middleware",
    answerFour: "controllers",
    answerFive: "listeners",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 192,
    category: "Express.js",
    question:
      "Express.js uses the concept of routing to determine how an application responds to a client request to a particular _______.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "address",
    answerTwo: "endpoint",
    answerThree: "URL",
    answerFour: "handler",
    answerFive: "server",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 193,
    category: "Express.js",
    question:
      "In Express.js, res.json() is a function that sends a JSON response. This method sends a response (with the correct content-type) that is the parameter converted to a JSON _______.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "object",
    answerTwo: "file",
    answerThree: "string",
    answerFour: "format",
    answerFive: "output",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 194,
    category: "Express.js",
    question:
      "Express.js makes it easy to define routes of your application. A route can be as simple as a path and a _______.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "URL",
    answerTwo: "response",
    answerThree: "handler",
    answerFour: "method",
    answerFive: "directory",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 195,
    category: "Express.js",
    question:
      "In Express.js, you can use template engines to generate HTML content on the server side based on your views. Which of the following are such engines?",
    correctAnswerArray: [true, true, true, true, true],
    answerOne: "Pug",
    answerTwo: "Mustache",
    answerThree: "EJS",
    answerFour: "Blade",
    answerFive: "Handlebars",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 196,
    category: "Express.js",
    question: "What HTTP method is typically used to update data?",
    correctAnswerArray: [true, false, false, false, false],
    answerOne: "PUT",
    answerTwo: "GET",
    answerThree: "POST",
    answerFour: "DELETE",
    answerFive: "FETCH",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 197,
    category: "Express.js",
    question: "Which Express.js function ends the request-response cycle?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "app.use()",
    answerTwo: "app.listen()",
    answerThree: "res.send()",
    answerFour: "app.get()",
    answerFive: "app.post()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 198,
    category: "Express.js",
    question: "To receive form data in Express.js, you can use the _______ middleware.",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "urlencoded",
    answerTwo: "body-parser",
    answerThree: "query-parser",
    answerFour: "data-parser",
    answerFive: "request-parser",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 199,
    category: "Express.js",
    question:
      "What would you use to define a variable that can be used in all views in Express.js?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "app.get()",
    answerTwo: "app.set()",
    answerThree: "app.variable()",
    answerFour: "app.locals",
    answerFive: "app.global()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 200,
    category: "Express.js",
    question: "Express.js is a _______ web application framework for Node.js.",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "modular",
    answerTwo: "structured",
    answerThree: "systematic",
    answerFour: "minimalist",
    answerFive: "simplified",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 201,
    category: "Express.js",
    question:
      "In Express.js, app.route() is a convenient method to define routes that belong to the same _______.",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "domain",
    answerTwo: "path",
    answerThree: "route path",
    answerFour: "group",
    answerFive: "callback",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 202,
    category: "Express.js",
    question: "What HTTP method is typically used to read data?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "PUT",
    answerTwo: "GET",
    answerThree: "POST",
    answerFour: "DELETE",
    answerFive: "FETCH",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 203,
    category: "Express.js",
    question:
      "What would you use to define a variable that can be used only in the current request-response cycle in Express.js?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "res.variable()",
    answerTwo: "res.set()",
    answerThree: "res.get()",
    answerFour: "res.locals",
    answerFive: "res.global()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 204,
    category: "Express.js",
    question: "What HTTP method is typically used to create data?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "PUT",
    answerTwo: "GET",
    answerThree: "POST",
    answerFour: "DELETE",
    answerFive: "FETCH",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 205,
    category: "Express.js",
    question: "In Express.js, what is the correct syntax for handling errors using middleware?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "app.use((err, req, res, next) => {})",
    answerTwo: "app.use((err, req, res, next) => {})",
    answerThree: "app.error((err, req, res, next) => {})",
    answerFour: "app.handle((err, req, res, next) => {})",
    answerFive: "app.catch((err, req, res, next) => {})",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 206,
    category: "Express.js",
    question: "In Express.js, how can you serve static files?",
    correctAnswerArray: [false, false, true, false, false],
    answerOne: "app.static()",
    answerTwo: "app.file()",
    answerThree: "app.use(express.static())",
    answerFour: "app.serve()",
    answerFive: "app.resource()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 207,
    category: "Express.js",
    question: "What does the 'next' argument represent in Express.js middleware?",
    correctAnswerArray: [false, true, false, false, false],
    answerOne: "The next middleware in the application",
    answerTwo: "The callback function to call the next middleware in the stack",
    answerThree: "The next request that comes into the server",
    answerFour: "The next response to be sent to the client",
    answerFive: "The next route to be executed",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 208,
    category: "Express.js",
    question: "What HTTP method is typically used to delete data?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "PUT",
    answerTwo: "GET",
    answerThree: "POST",
    answerFour: "DELETE",
    answerFive: "FETCH",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 209,
    category: "Express.js",
    question: "In Express.js, how can you handle 404 errors that have no other route handlers?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "app.catch(404, (req, res, next) => {})",
    answerTwo: "app.error(404, (req, res, next) => {})",
    answerThree: "app.handle(404, (req, res, next) => {})",
    answerFour: "app.use((req, res, next) => {})",
    answerFive: "app.get(404, (req, res, next) => {})",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 210,
    category: "Express.js",
    question:
      "In Express.js, how can you handle all HTTP methods at a specific route using the same function?",
    correctAnswerArray: [false, false, false, true, false],
    answerOne: "app.get('*', (req, res, next) => {})",
    answerTwo: "app.use('*', (req, res, next) => {})",
    answerThree: "app.route('*', (req, res, next) => {})",
    answerFour: "app.all('*', (req, res, next) => {})",
    answerFive: "app.handle('*', (req, res, next) => {})",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
];
module.exports = questionData;
